#!/usr/bin/env bash

echo "-----> Running post-compile hook"

# Set PATH to include Python bin directory
export PATH="/app/.heroku/python/bin:$PATH"
export PYTHONPATH="/app/.heroku/python/lib/python3.11/site-packages:$PYTHONPATH"

echo "-----> Setting up Python environment"
python3 --version
which python3
python3 -m pip --version

echo "-----> Upgrading pip and installing build tools"
python3 -m pip install --upgrade pip setuptools wheel

echo "-----> Installing yt-dlp"
# First try: Install as module
python3 -m pip install --upgrade yt-dlp

# Second try: Install with user flag
python3 -m pip install --user --upgrade yt-dlp

# Create necessary directories with proper permissions
echo "-----> Setting up directories"
mkdir -p /app/.cache /app/.config /app/temp /app/.local/bin
chmod -R 777 /app/.cache /app/.config /app/temp /app/.local

# Try to find yt-dlp executable
echo "-----> Locating yt-dlp"
which yt-dlp || echo "yt-dlp not in PATH"
find /app -name "yt-dlp" -type f 2>/dev/null || echo "No yt-dlp files found"

# Create symlinks if needed
if [ -f ~/.local/bin/yt-dlp ]; then
    echo "Found yt-dlp in user bin, creating symlink"
    ln -sf ~/.local/bin/yt-dlp /app/.heroku/python/bin/yt-dlp
fi

# Make executables
find /app -name "yt-dlp" -type f -exec chmod +x {} \; 2>/dev/null

echo "-----> Testing yt-dlp installation"
# Try different ways to run yt-dlp
echo "Method 1: Direct command"
yt-dlp --version || echo "Direct command failed"

echo "Method 2: Python module"
python3 -m yt_dlp --version || echo "Python module failed"

echo "Method 3: Full path"
~/.local/bin/yt-dlp --version || echo "Full path failed"

# Print Python environment info
echo "-----> Python Environment Info"
python3 -c "import sys; print('Python Path:', sys.path)"
python3 -m pip list | grep yt-dlp

echo "-----> Post-compile hook completed"
